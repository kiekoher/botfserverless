services:
  redis:
    image: redis:7.2-alpine
    container_name: eva_redis_prod
    restart: unless-stopped
    volumes:
      - redis_data:/data
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  traefik:
    image: traefik:v2.11
    container_name: eva_traefik_prod
    restart: unless-stopped
    # --- MEJORA IMPLEMENTADA ---
    # Se inyectan las variables explícitamente para asegurar que Traefik las reciba.
    environment:
      - CERTBOT_EMAIL=${CERTBOT_EMAIL}
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=${CERTBOT_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "traefik_data:/letsencrypt"
    env_file:
      - .env.prod
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  main-api:
    build:
      context: ./services/main-api
      dockerfile: Dockerfile
    container_name: eva_main_api_prod
    restart: unless-stopped
    env_file:
      - .env.prod
    # --- MEJORA IMPLEMENTADA ---
    # Se inyecta la variable de dominio para que esté disponible para la interpolación de las etiquetas.
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
    depends_on:
      - redis
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 8000 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.main-api.rule=Host(`${DOMAIN_NAME}`) && PathPrefix(`/api`)"
      - "traefik.http.routers.main-api.entrypoints=websecure"
      - "traefik.http.routers.main-api.tls.certresolver=myresolver"
      - "traefik.http.services.main-api.loadbalancer.server.port=8000"

  whatsapp-gateway:
    build:
      context: ./services/whatsapp-gateway
      dockerfile: Dockerfile
    container_name: eva_whatsapp_gateway_prod
    restart: unless-stopped
    env_file:
      - .env.prod
    volumes:
      - whatsapp_session_prod:/app/
    depends_on:
      - redis
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  transcription-worker:
    build:
      context: ./services/transcription-worker
      dockerfile: Dockerfile
    container_name: eva_transcription_worker_prod
    restart: unless-stopped
    env_file:
      - .env.prod
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/app/gcloud-credentials.json
    volumes:
      - ./gcloud-credentials.json:/app/gcloud-credentials.json:ro
    depends_on:
      - redis
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: eva_frontend_prod
    restart: unless-stopped
    env_file:
      - .env.prod
    # --- MEJORA IMPLEMENTADA ---
    # Se inyecta la variable de dominio para que esté disponible para la interpolación de las etiquetas.
    environment:
      - DOMAIN_NAME=${DOMAIN_NAME}
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 3000 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`${DOMAIN_NAME}`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"

  loki:
    image: grafana/loki:2.9.0
    container_name: eva_loki_prod
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  promtail:
    image: grafana/promtail:2.9.0
    container_name: eva_promtail_prod
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./promtail/promtail.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  redis_data:
  whatsapp_session_prod:
  traefik_data:
