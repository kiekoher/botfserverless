services:
  redis:
    image: redis:7.2-alpine
    container_name: eva_redis_prod
    restart: unless-stopped
    volumes:
      - redis_data:/data
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  main-api:
    build:
      context: ./services/main-api
      dockerfile: Dockerfile
    container_name: eva_main_api_prod
    restart: unless-stopped
    env_file:
      - .env.prod
    depends_on:
      - redis
    healthcheck:
      # --- MEJORA IMPLEMENTADA ---
      # Se cambia el healthcheck a una prueba de TCP, que es más rápida y no depende de curl.
      test: ["CMD-SHELL", "nc -z localhost 8000 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  whatsapp-gateway:
    build:
      context: ./services/whatsapp-gateway
      dockerfile: Dockerfile
    container_name: eva_whatsapp_gateway_prod
    restart: unless-stopped
    env_file:
      - .env.prod
    volumes:
      - whatsapp_session_prod:/app/
    depends_on:
      - redis
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  transcription-worker:
    build:
      context: ./services/transcription-worker
      dockerfile: Dockerfile
    container_name: eva_transcription_worker_prod
    restart: unless-stopped
    env_file:
      - .env.prod
    depends_on:
      - redis
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: eva_frontend_prod
    restart: unless-stopped
    env_file:
      - .env.prod
    healthcheck:
      # --- MEJORA IMPLEMENTADA ---
      # Se cambia el healthcheck a una prueba de TCP, que es más rápida y no depende de wget.
      test: ["CMD-SHELL", "nc -z localhost 3000 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: eva_nginx_prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf.template:/etc/nginx/templates/default.conf.template:ro
      - certbot_conf:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    env_file:
      - .env.prod
    command: >
      sh -c "
        envsubst '$$DOMAIN_NAME' < /etc/nginx/templates/default.conf.template > /etc/nginx/conf.d/default.conf &&
        nginx -g 'daemon off;'
      "
    depends_on:
      main-api:
        condition: service_healthy
      frontend:
        condition: service_healthy
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  # El resto de los servicios (certbot, loki, promtail) y los volúmenes permanecen igual...
  certbot:
    image: certbot/certbot
    container_name: eva_certbot_prod
    env_file:
      - .env.prod
    volumes:
      - certbot_conf:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    command: >
      sh -c "
        certbot certonly --webroot --webroot-path=/var/www/certbot --email $${CERTBOT_EMAIL} --agree-tos --no-eff-email -d $${DOMAIN_NAME} || true &&
        while true; do sleep 12h & wait $${!}; certbot renew; done
      "
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  loki:
    image: grafana/loki:2.9.0
    container_name: eva_loki_prod
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  promtail:
    image: grafana/promtail:2.9.0
    container_name: eva_promtail_prod
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./promtail/promtail.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  redis_data:
  whatsapp_session_prod:
  certbot_conf:
  certbot_www:

