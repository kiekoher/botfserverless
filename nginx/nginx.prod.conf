# Este archivo se monta en /etc/nginx/conf.d/default.conf
# Requiere que el nginx.conf base (de la imagen) incluya conf.d/*.conf (el oficial lo hace).

# Upstreams a servicios internos en la red por defecto de Docker Compose
upstream frontend_upstream {
    server frontend:3000;
    keepalive 64;
}

upstream api_upstream {
    server main-api:8000;
    keepalive 64;
}

# Servidor HTTP (80) - maneja challenge de Certbot y proxy en claro
server {
    listen 80;
    listen [::]:80;
    server_name eva.rdv.net.co;

    # Ruta de salud local de Nginx (no toca upstreams)
    location = /nginx-health {
        add_header Content-Type text/plain;
        return 200 "ok\n";
    }

    # HTTP-01 challenge para certbot
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }

    # API
    location /api {
        proxy_pass http://api_upstream;
        proxy_http_version 1.1;

        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSockets/SSE
        proxy_set_header Upgrade           $http_upgrade;
        proxy_set_header Connection        "upgrade";

        proxy_connect_timeout   5s;
        proxy_send_timeout      300s;
        proxy_read_timeout      300s;
        send_timeout            300s;
    }

    # Frontend (Next.js)
    location / {
        proxy_pass http://frontend_upstream;
        proxy_http_version 1.1;

        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header Upgrade           $http_upgrade;
        proxy_set_header Connection        "upgrade";

        proxy_connect_timeout   5s;
        proxy_send_timeout      300s;
        proxy_read_timeout      300s;
        send_timeout            300s;
    }
}

# Servidor por defecto (catch-all) para evitar 444/timeout si llega otro Host
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;

    location = /nginx-health {
        add_header Content-Type text/plain;
        return 200 "ok\n";
    }

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }

    return 301 http://eva.rdv.net.co$request_uri;
}

# Plantilla SSL (activar cuando tengas certificados)
# server {
#   listen 443 ssl http2;
#   listen [::]:443 ssl http2;
#   server_name eva.rdv.net.co;
#
#   ssl_certificate     /etc/letsencrypt/live/eva.rdv.net.co/fullchain.pem;
#   ssl_certificate_key /etc/letsencrypt/live/eva.rdv.net.co/privkey.pem;
#   include /etc/letsencrypt/options-ssl-nginx.conf;
#   ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
#
#   # Repite bloques /api y / de arriba (proxy_pass a upstreams).
# }
