name: CI/CD - Test, Build, and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-and-lint:
    name: Test and Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: docker-compose up -d

      - name: Wait for services to be healthy
        run: sleep 30

      - name: Lint and Test Backend
        run: |
          docker-compose exec -T main-api ruff format .
          docker-compose exec -T main-api ruff check . --fix
          docker-compose exec -T main-api pytest
          docker-compose exec -T transcription-worker ruff format .
          docker-compose exec -T transcription-worker ruff check . --fix
          docker-compose exec -T transcription-worker pytest

      - name: Lint and Test Frontend
        run: |
          docker-compose exec -T frontend npm run lint
          # docker-compose exec -T frontend npm run test

  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: test-and-lint
    if: github.event_name == 'push'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Nginx
        uses: docker/build-push-action@v5
        with:
          context: ./nginx
          file: ./nginx/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/eva-nginx:latest

      - name: Build and push Frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/eva-frontend:latest

      - name: Build and push Main API
        uses: docker/build-push-action@v5
        with:
          context: ./services/main-api
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/eva-main-api:latest

      - name: Build and push WhatsApp Gateway
        uses: docker/build-push-action@v5
        with:
          context: ./services/whatsapp-gateway
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/eva-whatsapp-gateway:latest

      - name: Build and push Transcription Worker
        uses: docker/build-push-action@v5
        with:
          context: ./services/transcription-worker
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/eva-transcription-worker:latest

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'push'
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /app
            echo "DOMAIN_NAME=${{ secrets.DOMAIN_NAME }}" > .env.prod
            echo "CERTBOT_EMAIL=${{ secrets.CERTBOT_EMAIL }}" >> .env.prod
            echo "SUPABASE_URL=${{ secrets.SUPABASE_URL }}" >> .env.prod
            echo "SUPABASE_KEY=${{ secrets.SUPABASE_KEY }}" >> .env.prod
            echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" >> .env.prod
            echo "BACKEND_URL=http://nginx/api/chat" >> .env.prod
            echo "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}" >> .env.prod
            echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}" >> .env.prod
            docker-compose -f docker-compose.prod.yml pull
            docker-compose -f docker-compose.prod.yml down
            docker-compose -f docker-compose.prod.yml up -d
