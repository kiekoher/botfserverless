name: Test and Deploy EVA Production Services

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering

jobs:
  # ============================================================================
  #                                TEST JOBS
  # ============================================================================
  test-api:
    name: Test API (Python)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run API tests
        run: pytest api/

  test-frontend:
    name: Test Frontend (Next.js)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies
        working-directory: ./frontend
        run: npm install
      - name: Run frontend tests
        working-directory: ./frontend
        run: npm test

  test-gateway:
    name: Test Gateway (Node.js)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install dependencies
        working-directory: ./services/whatsapp-gateway
        run: npm install
      - name: Run gateway tests
        working-directory: ./services/whatsapp-gateway
        run: npm test

  # ============================================================================
  #                              DEPLOYMENT JOBS
  # ============================================================================
  deploy-gateway:
    name: Deploy WhatsApp Gateway
    needs: [test-gateway] # Depends on its own tests
    if: |
      github.event_name == 'workflow_dispatch' ||
      (
        github.event_name == 'push' &&
        needs.test-gateway.result == 'success' &&
        (
          contains(join(github.event.commits.*.modified, ' '), 'services/whatsapp-gateway/') ||
          contains(join(github.event.commits.*.added, ' '), 'services/whatsapp-gateway/') ||
          contains(join(github.event.commits.*.removed, ' '), 'services/whatsapp-gateway/') ||
          contains(join(github.event.commits.*.modified, ' '), 'docker-compose.prod.yml')
        )
      )
    runs-on: ubuntu-latest
    steps:
      - name: Configure SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.GATEWAY_SSH_PRIVATE_KEY }}

      - name: Add remote host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.GATEWAY_SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Execute Deployment Script on Server
        env:
          DOPPLER_TOKEN: ${{ secrets.DOPPLER_TOKEN_PROD }}
        run: |
          ssh ${{ secrets.GATEWAY_SSH_USER }}@${{ secrets.GATEWAY_SSH_HOST }} "cd ~/eva-platform && export DOPPLER_TOKEN=${DOPPLER_TOKEN} && bash scripts/deploy.sh"

  deploy-migrations:
    name: Deploy Database Migrations
    needs: [test-api] # Depends on API tests
    if: |
      github.event_name == 'workflow_dispatch' ||
      (
        github.event_name == 'push' &&
        needs.test-api.result == 'success' &&
        (
          contains(join(github.event.commits.*.modified, ' '), 'supabase/migrations/') ||
          contains(join(github.event.commits.*.added, ' '), 'supabase/migrations/') ||
          contains(join(github.event.commits.*.removed, ' '), 'supabase/migrations/')
        )
      )
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Link Supabase project
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
        run: |
          supabase link --project-ref $SUPABASE_PROJECT_ID

      - name: Push database migrations
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: |
          supabase db push
