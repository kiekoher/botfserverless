groups:
  - name: Host and Container Alerts
    rules:
      - alert: HostOutOfMemory
        expr: (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes) * 100 < 10
        for: 5m
        labels:
          severity: critical
        annotations:
          summary: "Host out of memory (instance {{ $labels.instance }})"
          description: "Node memory is dangerously low (< 10% available).\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostHighCpuLoad
        expr: 100 - (avg by (instance) (rate(node_cpu_seconds_total{mode="idle"}[2m])) * 100) > 85
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Host high CPU load (instance {{ $labels.instance }})"
          description: "CPU load is > 85% for more than 5 minutes.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: HostDiskWillFillIn4Hours
        expr: predict_linear(node_filesystem_free_bytes{mountpoint="/"}[1h], 4 * 3600) < 0
        for: 2h
        labels:
          severity: critical
        annotations:
          summary: "Host disk will fill in 4 hours (instance {{ $labels.instance }})"
          description: "Filesystem is predicted to run out of space in the next 4 hours.\n  VALUE = {{ $value }}\n  LABELS = {{ $labels }}"

      - alert: ContainerDown
        expr: up == 0
        for: 1m
        labels:
          severity: critical
        annotations:
          summary: "Container down ({{ $labels.name }})"
          description: "Container {{ $labels.name }} on instance {{ $labels.instance }} is down."

      - alert: ContainerHighMemoryUsage
        expr: (sum(container_memory_usage_bytes) by (name) / sum(container_spec_memory_limit_bytes) by (name)) * 100 > 90
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "Container high memory usage ({{ $labels.name }})"
          description: "Container {{ $labels.name }} is using over 90% of its memory limit."

  - name: WhatsApp Gateway Alerts
    rules:
      - alert: WhatsAppSessionDisconnected
        # This metric needs to be created in the whatsapp-gateway service
        expr: eva_whatsapp_session_connected == 0
        for: 2m
        labels:
          severity: critical
        annotations:
          summary: "WhatsApp Gateway disconnected"
          description: "The WhatsApp session has been lost. Manual intervention (QR code scan) is URGENTLY required."

  - name: Application Alerts
    rules:
      - alert: HighApiErrorRate
        expr: (sum(rate(http_requests_total{status_code=~"5..", job="main-api"}[5m])) / sum(rate(http_requests_total{job="main-api"}[5m]))) * 100 > 5
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High API error rate on main-api"
          description: "More than 5% of requests to the main-api are returning 5xx errors."

      - alert: HighApiLatency
        expr: histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket{job="main-api"}[5m])) by (le)) > 1
        for: 5m
        labels:
          severity: warning
        annotations:
          summary: "High API latency on main-api"
          description: "The 95th percentile latency for main-api is over 1 second."
